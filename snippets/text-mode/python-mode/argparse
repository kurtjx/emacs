from argparse import ArgumentParser
parser = ArgumentParser(description='Program description')  

""" 
ArgumentParser.add_argument(name or flags...[, action][,
nargs][, const][, default][, type][, choices][, required][, help][, metavar][,
dest])

Define how a single command line argument should be parsed. Each
parameter has its own more detailed description below, but in short they are:

name or flags - Either a name or a list of option strings, e.g. foo or -f, --foo
action - The basic type of action to be taken when this argument is encountered at the command-line.
nargs - The number of command-line arguments that should be consumed.
const - A constant value required by some action and nargs selections.
default - The value produced if the argument is absent from the command-line.
type - The type to which the command-line arg should be converted.
choices - A container of the allowable values for the argument.
required - Whether or not the command-line option may be omitted (optionals only).
help - A brief description of what the argument does.
metavar - A name for the argument in usage messages.
dest - The name of the attribute to be added to the object returned by parse_args().
"""

# parser.add_argument('integers', metavar='N', type=int, nargs='+',
#                    help='an integer for the accumulator')
# parser.add_argument('--sum', dest='accumulate', action='store_const',
#                    const=sum, default=max,
#                    help='sum the integers (default: find the max)')

args = parser.parse_args()
